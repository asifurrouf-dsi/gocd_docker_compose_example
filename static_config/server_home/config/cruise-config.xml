<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="90">
  <server artifactsdir="artifacts" agentAutoRegisterKey="123456789abcdef" commandRepositoryLocation="default" serverId="9d990e3b-44a6-4775-9948-c3d912d3b078" />
  <config-repos>
    <config-repo plugin="yaml.config.plugin">
      <git url="https://github.com/d-led/gocd-rpi-unicorn-hat-monitor.git" />
    </config-repo>
    <config-repo plugin="yaml.config.plugin">
      <git url="https://github.com/d-led/automatic-lua-property-tables.git" />
    </config-repo>
    <config-repo plugin="yaml.config.plugin">
      <git url="https://github.com/d-led/dont_wait_forever_for_the_tests.git" />
    </config-repo>
  </config-repos>
  <pipelines group="defaultGroup">
    <pipeline name="something_complex">
      <materials>
        <git url="https://github.com/d-led/gocd_docker_compose_example.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="ls" />
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>df -h &gt; df.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="df.txt" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="unit">
        <jobs>
          <job name="unit_test_1">
            <tasks>
              <exec command="sleep">
                <arg>3</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>java</resource>
            </resources>
          </job>
          <job name="unit_test_2">
            <tasks>
              <exec command="sleep">
                <arg>1</arg>
              </exec>
            </tasks>
            <resources>
              <resource>python</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="package">
        <jobs>
          <job name="package">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>sleep 3 &gt; sleep.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="sleep.txt" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="acceptance">
      <materials>
        <pipeline pipelineName="something_complex" stageName="package" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="sleep">
                <arg>7</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="security">
      <materials>
        <pipeline pipelineName="something_complex" stageName="package" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="sleep">
                <arg>10</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="docs">
      <materials>
        <pipeline pipelineName="something_complex" stageName="build" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="sleep">
                <arg>15</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="deploy">
      <materials>
        <pipeline pipelineName="security" stageName="defaultStage" />
        <pipeline pipelineName="acceptance" stageName="defaultStage" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <fetchartifact pipeline="something_complex/acceptance" stage="build" job="build" srcfile="df.txt">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="something_complex/acceptance" stage="package" job="package" srcfile="sleep.txt">
                <runif status="passed" />
              </fetchartifact>
              <exec command="ls" />
              <exec command="cat">
                <arg>sleep.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
</cruise>
